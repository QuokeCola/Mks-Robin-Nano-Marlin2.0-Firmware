# !!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE
# https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags
#
# If you need to override existing CMake configuration or add extra,
# please create `CMakeListsUser.txt` in the root of project.
# The `CMakeListsUser.txt` will not be overwritten by PlatformIO.



set(CMAKE_CONFIGURATION_TYPES "mega2560;mega1280;rambo;FYSETC_F6_13;sanguino644p;sanguino1284p;melzi;melzi_optiboot;at90usb1286_cdc;at90usb1286_dfu;DUE;DUE_USB;DUE_debug;LPC1768;LPC1769;STM32F103RC;STM32F103RC_fysetc;STM32F103RC_btt;STM32F103RC_btt_USB;STM32F103RC_btt_512K;STM32F103RC_btt_512K_USB;STM32F103RE;STM32F103RE_btt;STM32F103RE_btt_USB;STM32F4;STM32F7;ARMED;STM32F103VE_GTM32;STM32F103VE_longer;mks_robin_mini;mks_robin_nano;mks_robin_nano35;mks_robin_nano35_v2;mks_robin;mks_robin_pro35;mks_robin_lite;mks_robin_lite3;jgaurora_a5s_a1;STM32F103CB_malyan;chitu_f103;STM32F401VE_STEVAL;FLYF407ZG;FYSETC_S6;STM32F407VE_black;BIGTREE_SKR_PRO;BIGTREE_GTR_V1_0;BIGTREE_BTT002;teensy31;teensy35;esp32;linux_native;SAMD51_grandcentral_m4;rumba32_f446ve;rumba32_mks;include_tree;" CACHE STRING "Build Types reflect PlatformIO Environments" FORCE)

set(CLION_SVD_FILE_PATH "$ENV{HOME}/.platformio/platforms/ststm32@6.1.1/misc/svd/STM32F103xx.svd" CACHE FILEPATH "Peripheral Registers Definitions File" FORCE)

SET(CMAKE_C_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/bin/arm-none-eabi-gcc")
SET(CMAKE_CXX_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/bin/arm-none-eabi-g++")
SET(CMAKE_CXX_FLAGS "-std=gnu++14 -fno-rtti -fno-exceptions -Os -mcpu=cortex-m3 -mthumb -fsigned-char -fno-move-loop-invariants -fno-strict-aliasing --specs=nano.specs --specs=nosys.specs -MMD -MP -fmax-errors=5 -g -fmerge-all-constants -mcpu=cortex-m3 -mthumb -ffunction-sections -fdata-sections -nostdlib -march=armv7-m --param max-inline-insns-single=500 -Wall -Os")
SET(CMAKE_C_FLAGS "-std=gnu11 -std=gnu11 -Os -mcpu=cortex-m3 -mthumb -fsigned-char -fno-move-loop-invariants -fno-strict-aliasing --specs=nano.specs --specs=nosys.specs -MMD -MP -fmax-errors=5 -g -fmerge-all-constants -mcpu=cortex-m3 -mthumb -ffunction-sections -fdata-sections -nostdlib -march=armv7-m --param max-inline-insns-single=500 -Wall -Os")

SET(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 14)

if (CMAKE_BUILD_TYPE MATCHES "mks_robin_nano35")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'HAVE_SW_SERIAL')
    add_definitions(-D'MCU_STM32F103VE')
    add_definitions(-D'SS_TIMER=4')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_ARCH_STM32F1')
    add_definitions(-D'ARDUINO_GENERIC_STM32F103V')
    add_definitions(-D'MCU_STM32F103VE')
    add_definitions(-D'__STM32F1__')
    add_definitions(-D'BOARD_generic_stm32f103v')
    add_definitions(-D'F_CPU=72000000L')
    add_definitions(-D'VECT_TAB_ADDR=0x8000000')
    add_definitions(-D'ERROR_LED_PORT=GPIOE')
    add_definitions(-D'ERROR_LED_PIN=6')
    add_definitions(-D'CONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=1')
    add_definitions(-D'SERIAL_USB')
    add_definitions(-D'GENERIC_BOOTLOADER')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/USBComposite")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/EEPROM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/STM32ADC/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35/MKS-LittlevGL")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35/MKS-LittlevGL/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Wire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Wire/utility")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35/SoftwareSerialM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/LiquidCrystal")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/cores/maple")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/stm32f1/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/usb/stm32f1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/usb/usb_lib")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/variants/generic_stm32f103v")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/A_STM32_Examples")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_GFX_AS")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_ILI9341")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_ILI9341_STM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_SSD1306")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Ethernet_STM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS701")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS701/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS821")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS821/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS900")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Lcd7920_STM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS116")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS116/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/OLED_I2C")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/OneWireSTM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/RTClock/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/SDIO")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Serasidis_EtherCard_STM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Serasidis_VS1003B_STM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Serasidis_XPT2046_touch/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Touch-Screen-Library_STM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/WS2812B/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/WireSlave/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/stm_fft")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35/*.*
    )
endif()

if (CMAKE_BUILD_TYPE MATCHES "mega2560")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ARDUINO_AVR_MEGA2560')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'F_CPU=16000000L')
    add_definitions(-D'ARDUINO_ARCH_AVR')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'__AVR_ATmega2560__')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega2560/TMC26XStepper")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega2560/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega2560/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega2560/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega2560/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega2560/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega2560/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega2560/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega2560/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega2560/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/variants/mega")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/HID/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/avr/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega2560/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "mega1280")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ARDUINO_AVR_MEGA')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'F_CPU=16000000L')
    add_definitions(-D'ARDUINO_ARCH_AVR')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'__AVR_ATmega1280__')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega1280/TMC26XStepper")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega1280/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega1280/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega1280/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega1280/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega1280/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega1280/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega1280/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega1280/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega1280/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/variants/mega")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/HID/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/avr/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mega1280/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "rambo")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ARDUINO_AVR_RAMBO')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'F_CPU=16000000L')
    add_definitions(-D'ARDUINO_ARCH_AVR')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'__AVR_ATmega2560__')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rambo/TMC26XStepper")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rambo/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rambo/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rambo/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rambo/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rambo/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rambo/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rambo/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rambo/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rambo/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/variants/rambo")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/HID/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/avr/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rambo/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "FYSETC_F6_13")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ARDUINO_AVR_MEGA2560')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'F_CPU=16000000L')
    add_definitions(-D'ARDUINO_ARCH_AVR')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'__AVR_ATmega2560__')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_F6_13/TMC26XStepper")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_F6_13/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_F6_13/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_F6_13/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_F6_13/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_F6_13/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_F6_13/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_F6_13/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_F6_13/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_F6_13/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/variants/fysetcf6")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/HID/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/avr/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_F6_13/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "sanguino644p")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ARDUINO_AVR_SANGUINO')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'F_CPU=16000000L')
    add_definitions(-D'ARDUINO_ARCH_AVR')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'__AVR_ATmega644P__')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino644p/TMC26XStepper")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino644p/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino644p/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino644p/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino644p/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino644p/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino644p/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino644p/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino644p/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino644p/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/variants/sanguino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/HID/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/avr/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino644p/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "sanguino1284p")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ARDUINO_AVR_SANGUINO')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'F_CPU=16000000L')
    add_definitions(-D'ARDUINO_ARCH_AVR')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'__AVR_ATmega1284P__')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino1284p/TMC26XStepper")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino1284p/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino1284p/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino1284p/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino1284p/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino1284p/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino1284p/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino1284p/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino1284p/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino1284p/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/variants/sanguino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/HID/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/avr/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/sanguino1284p/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "melzi")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ARDUINO_AVR_SANGUINO')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'F_CPU=16000000L')
    add_definitions(-D'ARDUINO_ARCH_AVR')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'__AVR_ATmega1284P__')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi/TMC26XStepper")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/variants/sanguino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/HID/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/avr/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "melzi_optiboot")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ARDUINO_AVR_SANGUINO')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'F_CPU=16000000L')
    add_definitions(-D'ARDUINO_ARCH_AVR')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'__AVR_ATmega1284P__')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi_optiboot/TMC26XStepper")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi_optiboot/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi_optiboot/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi_optiboot/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi_optiboot/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi_optiboot/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi_optiboot/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi_optiboot/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi_optiboot/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/variants/sanguino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/HID/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/avr/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/melzi_optiboot/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "at90usb1286_cdc")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'TEENSY2PP')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'USB_SERIAL')
    add_definitions(-D'ARDUINO=10805')
    add_definitions(-D'TEENSYDUINO=153')
    add_definitions(-D'CORE_TEENSY')
    add_definitions(-D'F_CPU=16000000L')
    add_definitions(-D'LAYOUT_US_ENGLISH')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/at90usb1286_cdc/TMC26XStepper")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/at90usb1286_cdc/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/at90usb1286_cdc/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/at90usb1286_cdc/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/at90usb1286_cdc/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/at90usb1286_cdc/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/at90usb1286_cdc/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SPI")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Wire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Wire/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_NeoPixel")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LiquidCrystal/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/cores/teensy")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/cores")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ADC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/AccelStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_STMPE610")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_VS1053")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_nRF8001")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_nRF8001/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/AltSoftSerial")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Artnet")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Audio")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Audio/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Bounce")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Bounce2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/CapacitiveSensor")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/CryptoAccel/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/DS1307RTC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/DmxSimple")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/DogLcd")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/EEPROM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/EasyTransfer")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/EasyTransferI2C")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Encoder")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Encoder/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Entropy")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Ethernet/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FNET/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FastCRC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FastLED")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FlexCAN")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FlexCAN_T4")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FlexiTimer2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FreqCount")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FreqMeasure")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FreqMeasureMulti")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FrequencyTimer2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ILI9341_t3")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ILI9488_t3/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/IRremote")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Keypad/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LedControl/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LedDisplay")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LiquidCrystalFast")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LowPower")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/MFRC522/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/MIDI/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Metro")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/MsTimer2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/NXPMotionSense")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/NXPMotionSense/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/NativeEthernet/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/OSC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/OctoWS2811")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/OneWire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PS2Keyboard")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PS2Keyboard/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PWMServo")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Ping")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PulsePosition")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/QuadEncoder")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/RA8875")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/RadioHead")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ResponsiveAnalogRead/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SD")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SD/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SPIFlash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ST7735_t3")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SerialFlash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Servo")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ShiftPWM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Snooze/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SoftPWM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SoftwareSerial")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TFT_ILI9163C")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Talkie")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TeensyThreads")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Time")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TimeAlarms")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TimerOne")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TimerThree")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TinyGPS")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Tlc5940")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TouchScreen")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/USBHost_t36")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/USBHost_t36/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/UTFT")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/VirtualWire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/WS2812Serial")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/XBee")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/XPT2046_Touchscreen")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/i2c_t3")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ks0108")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ssd1351")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/x10")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/avr/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/at90usb1286_cdc/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "at90usb1286_dfu")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'TEENSY2PP')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'USB_SERIAL')
    add_definitions(-D'ARDUINO=10805')
    add_definitions(-D'TEENSYDUINO=153')
    add_definitions(-D'CORE_TEENSY')
    add_definitions(-D'F_CPU=16000000L')
    add_definitions(-D'LAYOUT_US_ENGLISH')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/at90usb1286_dfu/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/at90usb1286_dfu/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/at90usb1286_dfu/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/at90usb1286_dfu/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/at90usb1286_dfu/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/at90usb1286_dfu/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SPI")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Wire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Wire/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_NeoPixel")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LiquidCrystal/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/cores/teensy")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/cores")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ADC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/AccelStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_STMPE610")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_VS1053")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_nRF8001")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_nRF8001/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/AltSoftSerial")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Artnet")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Audio")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Audio/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Bounce")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Bounce2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/CapacitiveSensor")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/CryptoAccel/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/DS1307RTC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/DmxSimple")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/DogLcd")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/EEPROM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/EasyTransfer")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/EasyTransferI2C")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Encoder")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Encoder/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Entropy")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Ethernet/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FNET/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FastCRC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FastLED")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FlexCAN")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FlexCAN_T4")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FlexiTimer2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FreqCount")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FreqMeasure")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FreqMeasureMulti")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FrequencyTimer2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ILI9341_t3")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ILI9488_t3/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/IRremote")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Keypad/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LedControl/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LedDisplay")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LiquidCrystalFast")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LowPower")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/MFRC522/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/MIDI/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Metro")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/MsTimer2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/NXPMotionSense")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/NXPMotionSense/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/NativeEthernet/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/OSC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/OctoWS2811")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/OneWire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PS2Keyboard")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PS2Keyboard/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PWMServo")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Ping")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PulsePosition")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/QuadEncoder")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/RA8875")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/RadioHead")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ResponsiveAnalogRead/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SD")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SD/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SPIFlash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ST7735_t3")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SerialFlash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Servo")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ShiftPWM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Snooze/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SoftPWM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SoftwareSerial")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TFT_ILI9163C")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Talkie")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TeensyThreads")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Time")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TimeAlarms")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TimerOne")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TimerThree")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TinyGPS")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Tlc5940")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TouchScreen")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/USBHost_t36")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/USBHost_t36/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/UTFT")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/VirtualWire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/WS2812Serial")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/XBee")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/XPT2046_Touchscreen")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/i2c_t3")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ks0108")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ssd1351")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/x10")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/avr/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/at90usb1286_dfu/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "DUE")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'__SAM3X8E__')
    add_definitions(-D'ARDUINO_SAM_DUE')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'ARDUINO=10805')
    add_definitions(-D'F_CPU=84000000L')
    add_definitions(-D'USBCON')
    add_definitions(-D'USB_VID=0x2341')
    add_definitions(-D'USB_PID=0x003E')
    add_definitions(-D'USB_PRODUCT=\"Arduino Due\"')
    add_definitions(-D'USB_MANUFACTURER=\"Arduino\"')
    add_definitions(-D'ARDUINO_ARCH_SAM')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/system/libsam")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/system/CMSIS/CMSIS/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/system/CMSIS/Device/ATMEL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/variants/arduino_due_x")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/libraries/HID/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "DUE_USB")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'__SAM3X8E__')
    add_definitions(-D'ARDUINO_SAM_DUE')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'ARDUINO=10805')
    add_definitions(-D'F_CPU=84000000L')
    add_definitions(-D'USBCON')
    add_definitions(-D'USB_VID=0x2341')
    add_definitions(-D'USB_PID=0x003E')
    add_definitions(-D'USB_PRODUCT=\"Arduino Due\"')
    add_definitions(-D'USB_MANUFACTURER=\"Arduino\"')
    add_definitions(-D'ARDUINO_ARCH_SAM')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_USB/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_USB/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_USB/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_USB/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_USB/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_USB/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_USB/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_USB/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_USB/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/system/libsam")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/system/CMSIS/CMSIS/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/system/CMSIS/Device/ATMEL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/variants/arduino_due_x")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/libraries/HID/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_USB/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "DUE_debug")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'__SAM3X8E__')
    add_definitions(-D'ARDUINO_SAM_DUE')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'ARDUINO=10805')
    add_definitions(-D'F_CPU=84000000L')
    add_definitions(-D'USBCON')
    add_definitions(-D'USB_VID=0x2341')
    add_definitions(-D'USB_PID=0x003E')
    add_definitions(-D'USB_PRODUCT=\"Arduino Due\"')
    add_definitions(-D'USB_MANUFACTURER=\"Arduino\"')
    add_definitions(-D'ARDUINO_ARCH_SAM')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_debug/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_debug/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_debug/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_debug/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_debug/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_debug/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_debug/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_debug/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_debug/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/system/libsam")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/system/CMSIS/CMSIS/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/system/CMSIS/Device/ATMEL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/variants/arduino_due_x")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-sam/libraries/HID/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/DUE_debug/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "LPC1768")
    add_definitions(-D'LPC176X_FRAMEWORK')
    add_definitions(-D'TARGET_LPC1768')
    add_definitions(-D'F_CPU=100000000L')
    add_definitions(-D'MCU_LPC1768')
    add_definitions(-D'PIO_PLATFORM_VERSION=1001UL')
    add_definitions(-D'PIO_FRAMEWORK_VERSION=2004UL')
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'U8G_HAL_LINKS')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'ARDUINO_ARCH_LPC176X')
    add_definitions(-D'ARDUINOLPC=10805')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/LPC1768/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/LPC1768/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/LPC1768/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/LPC1768/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-lpc176x/libraries/LiquidCrystal/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-lpc176x/libraries/Servo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/LPC1768/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/LPC1768/u8g")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-lpc176x/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-lpc176x/system/CMSIS/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-lpc176x/system/CMSIS/lib")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-lpc176x/system/lpc176x")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/LPC1768/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "LPC1769")
    add_definitions(-D'LPC176X_FRAMEWORK')
    add_definitions(-D'TARGET_LPC1768')
    add_definitions(-D'F_CPU=120000000L')
    add_definitions(-D'MCU_LPC1769')
    add_definitions(-D'PIO_PLATFORM_VERSION=1001UL')
    add_definitions(-D'PIO_FRAMEWORK_VERSION=2004UL')
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'U8G_HAL_LINKS')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'ARDUINO_ARCH_LPC176X')
    add_definitions(-D'ARDUINOLPC=10805')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/LPC1769/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/LPC1769/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/LPC1769/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/LPC1769/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-lpc176x/libraries/LiquidCrystal/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-lpc176x/libraries/Servo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/LPC1768/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/LPC1768/u8g")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-lpc176x/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-lpc176x/system/CMSIS/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-lpc176x/system/CMSIS/lib")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-lpc176x/system/lpc176x")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/LPC1769/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F103RC")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103RC')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103RC\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC/SoftwareSerialM")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Rx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F103RC_fysetc")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'DEBUG_LEVEL=0')
    add_definitions(-D'HAVE_SW_SERIAL')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103RC')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103RC\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_fysetc/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_fysetc/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_fysetc/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_fysetc/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_fysetc/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_fysetc/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_fysetc/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_fysetc/SoftwareSerialM")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_fysetc/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Rx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_fysetc/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F103RC_btt")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'DEBUG_LEVEL=0')
    add_definitions(-D'HAVE_SW_SERIAL')
    add_definitions(-D'SS_TIMER=4')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103RC')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103RC\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt/USBComposite for STM32F1")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt/SoftwareSerialM")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Rx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F103RC_btt_USB")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'DEBUG_LEVEL=0')
    add_definitions(-D'HAVE_SW_SERIAL')
    add_definitions(-D'SS_TIMER=4')
    add_definitions(-D'USE_USB_COMPOSITE')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103RC')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103RC\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_USB/USBComposite for STM32F1")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_USB/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_USB/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_USB/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_USB/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_USB/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_USB/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_USB/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_USB/SoftwareSerialM")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_USB/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Rx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_USB/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F103RC_btt_512K")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'DEBUG_LEVEL=0')
    add_definitions(-D'HAVE_SW_SERIAL')
    add_definitions(-D'SS_TIMER=4')
    add_definitions(-D'STM32_FLASH_SIZE=512')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103RC')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103RC\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K/USBComposite for STM32F1")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K/SoftwareSerialM")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Rx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F103RC_btt_512K_USB")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'DEBUG_LEVEL=0')
    add_definitions(-D'HAVE_SW_SERIAL')
    add_definitions(-D'SS_TIMER=4')
    add_definitions(-D'STM32_FLASH_SIZE=512')
    add_definitions(-D'USE_USB_COMPOSITE')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103RC')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103RC\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K_USB/USBComposite for STM32F1")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K_USB/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K_USB/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K_USB/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K_USB/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K_USB/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K_USB/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K_USB/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K_USB/SoftwareSerialM")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K_USB/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Rx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RC_btt_512K_USB/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F103RE")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103RE')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103RE\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE/SoftwareSerialM")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Rx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F103RE_btt")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'DEBUG_LEVEL=0')
    add_definitions(-D'HAVE_SW_SERIAL')
    add_definitions(-D'SS_TIMER=4')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103RE')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103RE\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt/SoftwareSerialM")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Rx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F103RE_btt_USB")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'DEBUG_LEVEL=0')
    add_definitions(-D'HAVE_SW_SERIAL')
    add_definitions(-D'SS_TIMER=4')
    add_definitions(-D'USE_USB_COMPOSITE')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103RE')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103RE\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt_USB/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt_USB/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt_USB/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt_USB/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt_USB/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt_USB/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt_USB/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt_USB/SoftwareSerialM")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt_USB/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Rx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103RE_btt_USB/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F4")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F4')
    add_definitions(-D'STM32F407xx')
    add_definitions(-D'STM32F40_41xxx')
    add_definitions(-D'ARDUINO_STM32DiscoveryF407')
    add_definitions(-D'BOARD_discovery_f4')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'USE_STM32GENERIC')
    add_definitions(-D'STM32GENERIC')
    add_definitions(-D'STM32F4')
    add_definitions(-D'MENU_USB_SERIAL')
    add_definitions(-D'MENU_SERIAL=SerialUSB')
    add_definitions(-D'HAL_IWDG_MODULE_ENABLED')
    add_definitions(-D'STM32F4xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_DISCO_F407VG')
    add_definitions(-D'BOARD_NAME=\"DISCO_F407VG\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F4/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F4/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F4/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F4/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F4/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F4/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F4/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F4xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F4xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F4xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F4xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/DISCO_F407VG")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F4/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F7")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F765xx')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'USE_STM32GENERIC')
    add_definitions(-D'STM32GENERIC')
    add_definitions(-D'STM32F7')
    add_definitions(-D'MENU_USB_SERIAL')
    add_definitions(-D'MENU_SERIAL=SerialUSB')
    add_definitions(-D'HAL_IWDG_MODULE_ENABLED')
    add_definitions(-D'STM32F7xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_REMRAM_V1')
    add_definitions(-D'BOARD_NAME=\"REMRAM_V1\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F7/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F7/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F7/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F7/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F7/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F7/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F7/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F7xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F7xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F7xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F7xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F7xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/REMRAM_V1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F7/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "ARMED")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F4')
    add_definitions(-D'STM32F407xx')
    add_definitions(-D'STM32F40_41xxx')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'USBCON')
    add_definitions(-D'USBD_VID=0x0483')
    add_definitions(-D'USB_MANUFACTURER=\"Unknown\"')
    add_definitions(-D'USB_PRODUCT=\"ARMED_V1\"')
    add_definitions(-D'USBD_USE_CDC')
    add_definitions(-D'STM32F4xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_ARMED_V1')
    add_definitions(-D'BOARD_NAME=\"ARMED_V1\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')
    add_definitions(-D'HAL_PCD_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/ARMED/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/ARMED/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/ARMED/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/ARMED/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/ARMED/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/ARMED/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/ARMED/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/ARMED/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F4xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F4xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F4xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F4xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/ARMED_V1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/ARMED/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F103VE_GTM32")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'DEBUG_LEVEL=DEBUG_NONE')
    add_definitions(-D'BOARD_generic_stm32f103v')
    add_definitions(-D'ARDUINO_GENERIC_STM32F103V')
    add_definitions(-D'ARDUINO_ARCH_STM32F1')
    add_definitions(-D'CONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=1')
    add_definitions(-D'VECT_TAB_ADDR=0x8000000')
    add_definitions(-D'ERROR_LED_PORT=GPIOE')
    add_definitions(-D'ERROR_LED_PIN=6')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103VE')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103VE\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_GTM32/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_GTM32/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_GTM32/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_GTM32/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_GTM32/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_GTM32/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_GTM32/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_GTM32/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Vx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_GTM32/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F103VE_longer")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'U20')
    add_definitions(-D'TS_V12')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103VE')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103VE\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_longer/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_longer/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_longer/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_longer/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_longer/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_longer/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_longer/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Vx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103VE_longer/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "mks_robin_mini")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103VE')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103VE\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_mini/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_mini/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_mini/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_mini/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_mini/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_mini/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_mini/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_mini/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Vx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_mini/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "mks_robin_nano")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'HAVE_SW_SERIAL')
    add_definitions(-D'MCU_STM32F103VE')
    add_definitions(-D'SS_TIMER=4')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_ARCH_STM32F1')
    add_definitions(-D'ARDUINO_GENERIC_STM32F103V')
    add_definitions(-D'MCU_STM32F103VE')
    add_definitions(-D'__STM32F1__')
    add_definitions(-D'BOARD_generic_stm32f103v')
    add_definitions(-D'F_CPU=72000000L')
    add_definitions(-D'VECT_TAB_ADDR=0x8000000')
    add_definitions(-D'ERROR_LED_PORT=GPIOE')
    add_definitions(-D'ERROR_LED_PIN=6')
    add_definitions(-D'CONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=1')
    add_definitions(-D'SERIAL_USB')
    add_definitions(-D'GENERIC_BOOTLOADER')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/USBComposite")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/EEPROM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/STM32ADC/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Wire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Wire/utility")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano/SoftwareSerialM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/LiquidCrystal")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/cores/maple")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/stm32f1/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/usb/stm32f1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/usb/usb_lib")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/variants/generic_stm32f103v")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/A_STM32_Examples")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_GFX_AS")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_ILI9341")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_ILI9341_STM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_SSD1306")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Ethernet_STM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS701")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS701/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS821")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS821/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS900")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Lcd7920_STM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS116")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS116/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/OLED_I2C")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/OneWireSTM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/RTClock/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/SDIO")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Serasidis_EtherCard_STM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Serasidis_VS1003B_STM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Serasidis_XPT2046_touch/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Touch-Screen-Library_STM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/WS2812B/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/WireSlave/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/stm_fft")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "mks_robin_nano35_v2")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'HAVE_SW_SERIAL')
    add_definitions(-D'MCU_STM32F103VE')
    add_definitions(-D'SS_TIMER=4')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_ARCH_STM32F1')
    add_definitions(-D'ARDUINO_GENERIC_STM32F103V')
    add_definitions(-D'MCU_STM32F103VE')
    add_definitions(-D'__STM32F1__')
    add_definitions(-D'BOARD_generic_stm32f103v')
    add_definitions(-D'F_CPU=72000000L')
    add_definitions(-D'VECT_TAB_ADDR=0x8000000')
    add_definitions(-D'ERROR_LED_PORT=GPIOE')
    add_definitions(-D'ERROR_LED_PIN=6')
    add_definitions(-D'CONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=1')
    add_definitions(-D'SERIAL_USB')
    add_definitions(-D'GENERIC_BOOTLOADER')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/USBComposite")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/EEPROM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/STM32ADC/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35_v2/MKS-LittlevGL")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35_v2/MKS-LittlevGL/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35_v2/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35_v2/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35_v2/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35_v2/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35_v2/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35_v2/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Wire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Wire/utility")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35_v2/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35_v2/SoftwareSerialM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/LiquidCrystal")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/cores/maple")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/stm32f1/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/usb/stm32f1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/usb/usb_lib")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/variants/generic_stm32f103v")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/A_STM32_Examples")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_GFX_AS")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_ILI9341")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_ILI9341_STM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_SSD1306")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Ethernet_STM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS701")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS701/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS821")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS821/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS900")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Lcd7920_STM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS116")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS116/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/OLED_I2C")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/OneWireSTM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/RTClock/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/SDIO")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Serasidis_EtherCard_STM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Serasidis_VS1003B_STM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Serasidis_XPT2046_touch/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Touch-Screen-Library_STM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/WS2812B/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/WireSlave/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/stm_fft")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_nano35_v2/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "mks_robin")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'HAVE_SW_SERIAL')
    add_definitions(-D'SS_TIMER=4')
    add_definitions(-D'STM32_XL_DENSITY')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103ZE')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103ZE\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin/SoftwareSerialM")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Zx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "mks_robin_pro35")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'STM32_XL_DENSITY')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103ZE')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103ZE\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_pro35/mylvgl")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_pro35/mylvgl/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_pro35/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_pro35/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_pro35/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_pro35/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_pro35/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_pro35/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_pro35/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Zx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_pro35/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "mks_robin_lite")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103RC')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103RC\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Rx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "mks_robin_lite3")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F103xE')
    add_definitions(-D'STM32F1')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'STM32F1xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_GENERICSTM32F103RC')
    add_definitions(-D'BOARD_NAME=\"GENERICSTM32F103RC\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite3/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite3/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite3/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite3/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite3/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite3/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite3/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite3/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F1xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F1xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/Generic_F103Rx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/mks_robin_lite3/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F103CB_malyan")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ARDUINO_GENERIC_STM32F103C')
    add_definitions(-D'MCU_STM32F103CB')
    add_definitions(-D'TARGET_STM32F1')
    add_definitions(-D'MCU_STM32F103CB')
    add_definitions(-D'__STM32F1__=1')
    add_definitions(-D'MOTHERBOARD=BOARD_MALYAN_M200')
    add_definitions(-D'SERIAL_USB')
    add_definitions(-D'DEBUG_LEVEL=0')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_ARCH_STM32F1')
    add_definitions(-D'ARDUINO_MALYANM200')
    add_definitions(-D'MCU_STM32F103CB')
    add_definitions(-D'__STM32F1__')
    add_definitions(-D'BOARD_malyanM200')
    add_definitions(-D'F_CPU=72000000L')
    add_definitions(-D'VECT_TAB_ADDR=0x8000000')
    add_definitions(-D'ERROR_LED_PORT=GPIOB')
    add_definitions(-D'ERROR_LED_PIN=1')
    add_definitions(-D'CONFIG_MAPLE_MINI_NO_DISABLE_DEBUG=1')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/USBComposite")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/EEPROM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/STM32ADC/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103CB_malyan/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103CB_malyan/SailfishRGB_LED")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Wire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Wire/utility")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103CB_malyan/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103CB_malyan/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32F1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/cores/maple")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/stm32f1/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/usb/stm32f1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/system/libmaple/usb/usb_lib")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/variants/malyanM200")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/A_STM32_Examples")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_GFX_AS")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_ILI9341")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_ILI9341_STM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Adafruit_SSD1306")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Ethernet_STM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS701")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS701/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS821")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS821/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/FreeRTOS900")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Lcd7920_STM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS116")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/MapleCoOS116/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/OLED_I2C")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/OneWireSTM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/RTClock/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/SDIO")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Serasidis_EtherCard_STM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Serasidis_VS1003B_STM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Serasidis_XPT2046_touch/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/Touch-Screen-Library_STM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/WS2812B/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/WireSlave/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32-maple/STM32F1/libraries/stm_fft")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F103CB_malyan/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F401VE_STEVAL")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F401xx')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'TARGET_STM32F4')
    add_definitions(-D'ARDUINO_STEVAL')
    add_definitions(-D'STM32F401xE')
    add_definitions(-D'USBCON')
    add_definitions(-D'USBD_USE_CDC')
    add_definitions(-D'USBD_VID=0x0483')
    add_definitions(-D'USB_PRODUCT=\"STEVAL_F401VE\"')
    add_definitions(-D'DISABLE_GENERIC_SERIALUSB')
    add_definitions(-D'STM32F4xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_STEVAL_STM32F401VE')
    add_definitions(-D'BOARD_NAME=\"STEVAL_STM32F401VE\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')
    add_definitions(-D'HAL_PCD_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Servo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F401VE_STEVAL/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F401VE_STEVAL/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F401VE_STEVAL/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F401VE_STEVAL/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/STM32F4xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/STM32F4xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/STM32F4xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/CMSIS/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/CMSIS/Device/ST/STM32F4xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/variants/STEVAL_F401VE")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F401VE_STEVAL/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "FLYF407ZG")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F407xx')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'STM32F4')
    add_definitions(-D'USBCON')
    add_definitions(-D'USBD_USE_CDC')
    add_definitions(-D'USBD_VID=0x0483')
    add_definitions(-D'USB_PRODUCT=\"STM32F407ZG\"')
    add_definitions(-D'TARGET_STM32F4')
    add_definitions(-D'VECT_TAB_OFFSET=0x8000')
    add_definitions(-D'STM32F4xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_FLYF407ZG')
    add_definitions(-D'BOARD_NAME=\"FLYF407ZG\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')
    add_definitions(-D'HAL_PCD_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Servo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FLYF407ZG/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FLYF407ZG/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FLYF407ZG/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FLYF407ZG/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/STM32F4xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/STM32F4xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/STM32F4xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/CMSIS/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/CMSIS/Device/ST/STM32F4xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/variants/FLY_F407ZG")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FLYF407ZG/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "FYSETC_S6")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F446xx')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'TARGET_STM32F4')
    add_definitions(-D'VECT_TAB_OFFSET=0x10000')
    add_definitions(-D'USBCON')
    add_definitions(-D'USBD_USE_CDC')
    add_definitions(-D'HAL_PCD_MODULE_ENABLED')
    add_definitions(-D'USBD_VID=0x0483')
    add_definitions(-D'USB_PRODUCT=\"FYSETC_S6\"')
    add_definitions(-D'STM32F4xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_FYSETC_S6')
    add_definitions(-D'BOARD_NAME=\"FYSETC_S6\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')
    add_definitions(-D'HAL_PCD_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Servo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_S6/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_S6/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_S6/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_S6/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_S6/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_S6/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_S6/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_S6/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/STM32F4xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/STM32F4xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/STM32F4xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/CMSIS/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/CMSIS/Device/ST/STM32F4xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/variants/FYSETC_S6")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/FYSETC_S6/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "STM32F407VE_black")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F407xx')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'TARGET_STM32F4')
    add_definitions(-D'ARDUINO_BLACK_F407VE')
    add_definitions(-D'USBCON')
    add_definitions(-D'USBD_USE_CDC')
    add_definitions(-D'USBD_VID=0x0483')
    add_definitions(-D'USB_PRODUCT=\"BLACK_F407VE\"')
    add_definitions(-D'STM32F4xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_BLACKSTM32F407VET6')
    add_definitions(-D'BOARD_NAME=\"BLACKSTM32F407VET6\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')
    add_definitions(-D'HAL_PCD_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Servo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F407VE_black/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F407VE_black/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F407VE_black/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F407VE_black/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/STM32F4xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/STM32F4xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/STM32F4xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/CMSIS/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/CMSIS/Device/ST/STM32F4xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/variants/MARLIN_F407VE")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/STM32F407VE_black/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "BIGTREE_SKR_PRO")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F4')
    add_definitions(-D'STM32F407xx')
    add_definitions(-D'STM32F40_41xxx')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'USBCON')
    add_definitions(-D'USBD_USE_CDC')
    add_definitions(-D'USBD_VID=0x0483')
    add_definitions(-D'USB_PRODUCT=\"STM32F407ZG\"')
    add_definitions(-D'TARGET_STM32F4')
    add_definitions(-D'STM32F407_5ZX')
    add_definitions(-D'VECT_TAB_OFFSET=0x8000')
    add_definitions(-D'STM32F4xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_BIGTREE_SKR_PRO')
    add_definitions(-D'BOARD_NAME=\"BIGTREE_SKR_PRO\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')
    add_definitions(-D'HAL_PCD_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Servo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_SKR_PRO/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_SKR_PRO/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_SKR_PRO/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_SKR_PRO/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_SKR_PRO/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_SKR_PRO/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_SKR_PRO/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_SKR_PRO/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_SKR_PRO/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/STM32F4xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/STM32F4xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/STM32F4xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/CMSIS/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/CMSIS/Device/ST/STM32F4xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/variants/BIGTREE_SKR_PRO_1v1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_SKR_PRO/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "BIGTREE_GTR_V1_0")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F4')
    add_definitions(-D'STM32F407xx')
    add_definitions(-D'STM32F40_41xxx')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'USBCON')
    add_definitions(-D'USBD_USE_CDC')
    add_definitions(-D'USBD_VID=0x0483')
    add_definitions(-D'USB_PRODUCT=\"STM32F407IG\"')
    add_definitions(-D'TARGET_STM32F4')
    add_definitions(-D'STM32F407IX')
    add_definitions(-D'VECT_TAB_OFFSET=0x8000')
    add_definitions(-D'STM32F4xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_BIGTREE_SKR_PRO')
    add_definitions(-D'BOARD_NAME=\"BIGTREE_SKR_PRO\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')
    add_definitions(-D'HAL_PCD_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Servo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_GTR_V1_0/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_GTR_V1_0/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_GTR_V1_0/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_GTR_V1_0/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_GTR_V1_0/LiquidCrystal")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_GTR_V1_0/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/SPI/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/STM32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/STM32F4xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/STM32F4xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/STM32F4xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/CMSIS/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/CMSIS/Device/ST/STM32F4xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/variants/BIGTREE_SKR_PRO_1v1")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_GTR_V1_0/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "BIGTREE_BTT002")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F4')
    add_definitions(-D'STM32F407xx')
    add_definitions(-D'STM32F40_41xxx')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'USBCON')
    add_definitions(-D'USBD_USE_CDC')
    add_definitions(-D'USBD_VID=0x0483')
    add_definitions(-D'USB_PRODUCT=\"STM32F407VE\"')
    add_definitions(-D'TARGET_STM32F4')
    add_definitions(-D'STM32F407_5VX')
    add_definitions(-D'VECT_TAB_OFFSET=0x8000')
    add_definitions(-D'HAVE_HWSERIAL2')
    add_definitions(-D'HAVE_HWSERIAL3')
    add_definitions(-D'PIN_SERIAL2_RX=PD_6')
    add_definitions(-D'PIN_SERIAL2_TX=PD_5')
    add_definitions(-D'STM32F4xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_BIGTREE_BTT002')
    add_definitions(-D'BOARD_NAME=\"BIGTREE_BTT002\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')
    add_definitions(-D'HAL_PCD_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Servo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_BTT002/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_BTT002/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_BTT002/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_BTT002/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_BTT002/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/STM32F4xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/STM32F4xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/STM32F4xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/CMSIS/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/CMSIS/Device/ST/STM32F4xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/system/Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/variants/BIGTREE_BTT002")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32@3.10700.191028/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/BIGTREE_BTT002/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "teensy31")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'__MK20DX256__')
    add_definitions(-D'ARDUINO_TEENSY31')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'USB_SERIAL')
    add_definitions(-D'ARDUINO=10805')
    add_definitions(-D'TEENSYDUINO=153')
    add_definitions(-D'CORE_TEENSY')
    add_definitions(-D'F_CPU=72000000L')
    add_definitions(-D'LAYOUT_US_ENGLISH')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Servo")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy31/TMC26XStepper")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy31/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy31/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy31/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy31/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy31/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy31/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Wire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Wire/utility")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy31/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SoftwareSerial")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SPI")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LiquidCrystal/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/cores/teensy3")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ADC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/AccelStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_STMPE610")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_VS1053")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_nRF8001")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_nRF8001/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/AltSoftSerial")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Artnet")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Audio")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Audio/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Bounce")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Bounce2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/CapacitiveSensor")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/CryptoAccel/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/DS1307RTC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/DmxSimple")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/DogLcd")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/EEPROM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/EasyTransfer")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/EasyTransferI2C")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Encoder")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Encoder/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Entropy")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Ethernet/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FNET/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FastCRC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FastLED")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FlexCAN")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FlexCAN_T4")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FlexiTimer2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FreqCount")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FreqMeasure")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FreqMeasureMulti")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FrequencyTimer2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ILI9341_t3")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ILI9488_t3/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/IRremote")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Keypad/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LedControl/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LedDisplay")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LiquidCrystalFast")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LowPower")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/MFRC522/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/MIDI/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Metro")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/MsTimer2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/NXPMotionSense")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/NXPMotionSense/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/NativeEthernet/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/OSC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/OctoWS2811")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/OneWire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PS2Keyboard")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PS2Keyboard/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PWMServo")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Ping")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PulsePosition")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/QuadEncoder")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/RA8875")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/RadioHead")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ResponsiveAnalogRead/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SD")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SD/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SPIFlash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ST7735_t3")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SerialFlash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ShiftPWM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Snooze/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SoftPWM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TFT_ILI9163C")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Talkie")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TeensyThreads")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Time")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TimeAlarms")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TimerOne")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TimerThree")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TinyGPS")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Tlc5940")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TouchScreen")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/USBHost_t36")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/USBHost_t36/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/UTFT")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/VirtualWire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/WS2812Serial")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/XBee")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/XPT2046_Touchscreen")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/i2c_t3")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ks0108")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ssd1351")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/x10")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.50401.190816/arm-none-eabi/include/c++/5.4.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.50401.190816/arm-none-eabi/include/c++/5.4.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.50401.190816/lib/gcc/arm-none-eabi/5.4.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.50401.190816/lib/gcc/arm-none-eabi/5.4.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.50401.190816/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy31/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "teensy35")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'__MK64FX512__')
    add_definitions(-D'ARDUINO_TEENSY35')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'USB_SERIAL')
    add_definitions(-D'ARDUINO=10805')
    add_definitions(-D'TEENSYDUINO=153')
    add_definitions(-D'CORE_TEENSY')
    add_definitions(-D'F_CPU=120000000L')
    add_definitions(-D'LAYOUT_US_ENGLISH')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Servo")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy35/TMC26XStepper")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy35/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy35/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy35/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy35/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy35/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy35/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Wire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Wire/utility")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy35/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SoftwareSerial")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SPI")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LiquidCrystal/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/cores/teensy3")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ADC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/AccelStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_STMPE610")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_VS1053")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_nRF8001")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Adafruit_nRF8001/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/AltSoftSerial")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Artnet")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Audio")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Audio/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Bounce")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Bounce2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/CapacitiveSensor")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/CryptoAccel/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/DS1307RTC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/DmxSimple")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/DogLcd")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/EEPROM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/EasyTransfer")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/EasyTransferI2C")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Encoder")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Encoder/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Entropy")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Ethernet/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FNET/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FastCRC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FastLED")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FlexCAN")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FlexCAN_T4")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FlexiTimer2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FreqCount")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FreqMeasure")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FreqMeasureMulti")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/FrequencyTimer2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ILI9341_t3")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ILI9488_t3/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/IRremote")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Keypad/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LedControl/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LedDisplay")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LiquidCrystalFast")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/LowPower")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/MFRC522/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/MIDI/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Metro")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/MsTimer2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/NXPMotionSense")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/NXPMotionSense/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/NativeEthernet/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/OSC")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/OctoWS2811")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/OneWire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PS2Keyboard")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PS2Keyboard/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PWMServo")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Ping")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/PulsePosition")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/QuadEncoder")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/RA8875")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/RadioHead")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ResponsiveAnalogRead/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SD")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SD/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SPIFlash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ST7735_t3")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SerialFlash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ShiftPWM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Snooze/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/SoftPWM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TFT_ILI9163C")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Talkie")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TeensyThreads")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Time")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TimeAlarms")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TimerOne")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TimerThree")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TinyGPS")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/Tlc5940")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/TouchScreen")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/USBHost_t36")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/USBHost_t36/utility")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/UTFT")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/VirtualWire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/WS2812Serial")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/XBee")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/XPT2046_Touchscreen")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/i2c_t3")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ks0108")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/ssd1351")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoteensy/libraries/x10")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.50401.190816/arm-none-eabi/include/c++/5.4.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.50401.190816/arm-none-eabi/include/c++/5.4.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.50401.190816/lib/gcc/arm-none-eabi/5.4.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.50401.190816/lib/gcc/arm-none-eabi/5.4.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.50401.190816/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/teensy35/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "esp32")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ARDUINO_ESP32_DEV')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'CORE_DEBUG_LEVEL=0')
    add_definitions(-D'ESP32')
    add_definitions(-D'ESP_PLATFORM')
    add_definitions(-D'F_CPU=240000000L')
    add_definitions(-D'HAVE_CONFIG_H')
    add_definitions(-D'MBEDTLS_CONFIG_FILE=\"mbedtls/esp_config.h\"')
    add_definitions(-D'ARDUINO=10805')
    add_definitions(-D'ARDUINO_ARCH_ESP32')
    add_definitions(-D'ARDUINO_VARIANT=\"esp32\"')
    add_definitions(-D'ARDUINO_BOARD=\"Espressif ESP32 Dev Module\"')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/EEPROM/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32/ESP3DLib/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/ArduinoOTA/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32/WebSockets/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WiFiClientSecure/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WebServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Update/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SPIFFS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Preferences/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/ESPmDNS/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32/ESP32SSPD")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/DNSServer/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32/ESPAsyncWebServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WiFi/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/FS/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32/AsyncTCP@src-a748d3837ad749344db3429b828f3136/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32/U8glib-HAL_ID1932/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Wire/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SPI/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/config")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/app_trace")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/app_update")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/asio")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/bootloader_support")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/bt")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/coap")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/console")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp-tls")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_adc_cal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_event")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_http_client")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_http_server")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_https_ota")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_ringbuf")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/ethernet")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/expat")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/fatfs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/freemodbus")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/freertos")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/heap")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/idf_test")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/jsmn")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/json")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/libsodium")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/log")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/lwip")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mbedtls")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mdns")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/micro-ecc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mqtt")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/newlib")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/nghttp")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/nvs_flash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/openssl")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/protobuf-c")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/protocomm")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/pthread")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/sdmmc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/smartconfig_ack")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/soc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/spi_flash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/spiffs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/tcp_transport")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/tcpip_adapter")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/ulp")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/vfs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wear_levelling")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wifi_provisioning")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wpa_supplicant")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/xtensa-debug-module")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp-face")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp32-camera")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/fb_gfx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/cores/esp32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/variants/esp32")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32/AsyncTCP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/AsyncUDP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/AzureIoT/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/BLE/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/BluetoothSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/ESP32/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/FFat/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPClient/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPUpdate/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/NetBIOS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SD/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SD_MMC/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SimpleBLE/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Ticker/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/5.2.0")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/5.2.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/5.2.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/esp32/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "linux_native")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'__PLAT_LINUX__')
    add_definitions(-D'__MARLIN_FIRMWARE__')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin/src/HAL/LINUX/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/linux_native/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "SAMD51_grandcentral_m4")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ARDUINO_GRAND_CENTRAL_M4')
    add_definitions(-D'ADAFRUIT_GRAND_CENTRAL_M4')
    add_definitions(-D'__SAMD51P20A__')
    add_definitions(-D'__SAMD51__')
    add_definitions(-D'__FPU_PRESENT')
    add_definitions(-D'ARM_MATH_CM4')
    add_definitions(-D'ENABLE_CACHE')
    add_definitions(-D'VARIANT_QSPI_BAUD_DEFAULT=50000000')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'ARDUINO=10805')
    add_definitions(-D'F_CPU=120000000L')
    add_definitions(-D'USBCON')
    add_definitions(-D'USB_VID=0x239A')
    add_definitions(-D'USB_PID=0x8020')
    add_definitions(-D'USB_PRODUCT=\"Adafruit Grand Central M4\"')
    add_definitions(-D'USB_MANUFACTURER=\"Adafruit\"')
    add_definitions(-D'ARDUINO_ARCH_SAMD')
    add_definitions(-D'USB_CONFIG_POWER=100')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/SAMD51_grandcentral_m4/Adafruit_SPIFlash/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/SAMD51_grandcentral_m4/SdFat - Adafruit Fork/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/SAMD51_grandcentral_m4/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/SAMD51_grandcentral_m4/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/SAMD51_grandcentral_m4/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/SAMD51_grandcentral_m4/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/SAMD51_grandcentral_m4/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/SAMD51_grandcentral_m4/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/SAMD51_grandcentral_m4/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/SAMD51_grandcentral_m4/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/SAMD51_grandcentral_m4/SoftwareSerialM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/libraries/SPI")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/libraries/Adafruit_ZeroDMA")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/libraries/Adafruit_ZeroDMA/utility")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/SAMD51_grandcentral_m4/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/libraries/Wire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis@1.40500.0/CMSIS/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis-atmel/CMSIS/Device/ATMEL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/cores/arduino/TinyUSB")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/cores/arduino/TinyUSB/Adafruit_TinyUSB_ArduinoCore")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/cores/arduino/TinyUSB/Adafruit_TinyUSB_ArduinoCore/tinyusb/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/variants/grand_central_m4")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/libraries/CI_Tests")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/libraries/HID")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/libraries/I2S/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/libraries/SAMD_AnalogCorrection/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/libraries/SDU/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd-adafruit/libraries/USBHost/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/SAMD51_grandcentral_m4/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "rumba32_f446ve")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F446xx')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'STM32F4xx')
    add_definitions(-D'ARDUINO_RUMBA32_F446VE')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'BOARD_NAME=\"RUMBA32_F446VE\"')
    add_definitions(-D'STM32F446xx')
    add_definitions(-D'USBCON')
    add_definitions(-D'USBD_VID=0x0483')
    add_definitions(-D'USB_MANUFACTURER=\"Unknown\"')
    add_definitions(-D'USB_PRODUCT=\"RUMBA32_F446VE\"')
    add_definitions(-D'HAL_PCD_MODULE_ENABLED')
    add_definitions(-D'USBD_USE_CDC')
    add_definitions(-D'DISABLE_GENERIC_SERIALUSB')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')
    add_definitions(-D'STM32F4xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_RUMBA32_F446VE')
    add_definitions(-D'BOARD_NAME=\"RUMBA32_F446VE\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')
    add_definitions(-D'HAL_PCD_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_f446ve/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_f446ve/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_f446ve/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_f446ve/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_f446ve/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_f446ve/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_f446ve/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_f446ve/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F4xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F4xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F4xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F4xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/RUMBA32_F446VE")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_f446ve/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "rumba32_mks")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'STM32F446xx')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'STM32F4xx')
    add_definitions(-D'ARDUINO_RUMBA32_F446VE')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'BOARD_NAME=\"RUMBA32_F446VE\"')
    add_definitions(-D'STM32F446xx')
    add_definitions(-D'USBCON')
    add_definitions(-D'USBD_VID=0x8000')
    add_definitions(-D'USB_MANUFACTURER=\"Unknown\"')
    add_definitions(-D'USB_PRODUCT=\"RUMBA32_F446VE\"')
    add_definitions(-D'HAL_PCD_MODULE_ENABLED')
    add_definitions(-D'USBD_USE_CDC')
    add_definitions(-D'DISABLE_GENERIC_SERIALUSB')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')
    add_definitions(-D'STM32F4xx')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'ARDUINO_ARCH_STM32')
    add_definitions(-D'ARDUINO_RUMBA32_F446VE')
    add_definitions(-D'BOARD_NAME=\"RUMBA32_F446VE\"')
    add_definitions(-D'HAL_UART_MODULE_ENABLED')
    add_definitions(-D'HAL_PCD_MODULE_ENABLED')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/IWatchdog/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Servo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_mks/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_mks/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_mks/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_mks/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_mks/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_mks/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_mks/TMCStepper/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SPI/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_mks/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/avr")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/LL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/hid")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino/stm32/usb/cdc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F4xx_HAL_Driver/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/STM32F4xx_HAL_Driver/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/STM32F4xx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/ST/STM32_USB_Device_Library/Core/Src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/open-amp/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/libmetal/lib/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Middlewares/OpenAMP/virtual_driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Core/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F4xx/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/system/Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/gcc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/DSP/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/variants/RUMBA32_F446VE")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/CMSIS_DSP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Keyboard/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/Mouse/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoststm32/libraries/SrcWrapper/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/rumba32_mks/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "include_tree")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ARDUINO_AVR_MEGA2560')
    add_definitions(-D'__MARLIN_FIRMWARE__')
    add_definitions(-D'F_CPU=16000000L')
    add_definitions(-D'ARDUINO_ARCH_AVR')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'__AVR_ATmega2560__')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/Marlin")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/include_tree/TMC26XStepper")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/include_tree/SlowSoftI2CMaster")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/include_tree/SailfishRGB_LED")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/include_tree/SailfishLCD")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/include_tree/Arduino-L6470/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/include_tree/LiquidTWI2")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/include_tree/U8glib-HAL_ID1932/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/include_tree/Adafruit NeoPixel")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/include_tree/TMCStepper/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/include_tree/LiquidCrystal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/variants/mega")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SPI/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-avr/libraries/HID/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-atmelavr/avr/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/include_tree/*.*
    )
endif()

FILE(GLOB_RECURSE SRC_LIST
    ${CMAKE_CURRENT_LIST_DIR}/Marlin/*.*
    ${CMAKE_CURRENT_LIST_DIR}/lib/*.*
)

list(APPEND SRC_LIST ${EXTRA_LIB_SOURCES})
